{"version":3,"sources":["webpack://promise-with-state/./src/makeQueryablePromise.ts","webpack://promise-with-state/./src/queryablePromise.ts","webpack://promise-with-state/./src/queryablePromiseState.ts","webpack://promise-with-state/webpack/bootstrap","webpack://promise-with-state/webpack/runtime/define property getters","webpack://promise-with-state/webpack/runtime/hasOwnProperty shorthand","webpack://promise-with-state/webpack/runtime/make namespace object","webpack://promise-with-state/./src/main.ts"],"names":["baseQueryableThenable","state","QueryablePromiseState","isPending","isFulfilled","isRejected","makeQueryablePromise","thenable","queryableThenable","Object","assign","then","result","error","_queryable","Symbol","_compositeThen","fn","x","QueryablePromise","fnExecutor","_promiseWrapper","exec","_state","Promise","err","reject","onFulfill","y","_","onReject","toStringTag","PENDING","FULFILLED","REJECTED","exports"],"mappings":"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","file":"main.js","sourcesContent":["import QueryablePromiseState from 'queryablePromiseState'\n\nconst baseQueryableThenable: any = {\n  /**\n   * @access private\n   * @description The queryable promise state.\n   * @returns {string} contains current promise state\n   * @memberof makeQueryablePromise\n   */\n  state: QueryablePromiseState.PENDING,\n\n  /**\n   * @access public\n   * @function isPending\n   * @description retrieves true if queried state is actual queryable promise state.\n   * @returns {boolean} true when queryable promise state is PENDING\n   * @memberof makeQueryablePromise\n   */\n  isPending (): boolean {\n    return this.state === QueryablePromiseState.PENDING\n  },\n\n  /**\n   * @access public\n   * @function isFulfilled\n   * @description retrieves true if queried state is actual queryable promise state.\n   * @returns {boolean} true when queryable promise state is FULFILLED\n   * @memberof makeQueryablePromise\n   */\n  isFulfilled (): boolean {\n    return this.state === QueryablePromiseState.FULFILLED\n  },\n\n  /**\n   * @access public\n   * @function isRejected\n   * @description retrieves true if queried state is actual queryable promise state.\n   * @returns {boolean} true when queryable promise state is REJECTED\n   * @memberof makeQueryablePromise\n   */\n  isRejected (): boolean {\n    return this.state === QueryablePromiseState.REJECTED\n  },\n}\n\n/**\n * @access public\n * @function makeQueryablePromise\n * @description Transform any promise to queryable promise.\n * @param {Promise} thenable the promise to be transformed\n * @returns {any} a promise enhanced with state query methods\n */\nfunction makeQueryablePromise (thenable: Promise<any>): any {\n  const queryableThenable: any = Object.assign(thenable, baseQueryableThenable)\n\n  queryableThenable\n    .then((result) => {\n      queryableThenable.state = QueryablePromiseState.FULFILLED\n      // console.log(1, queryableThenable)\n      return result\n    })\n    .catch((error) => {\n      queryableThenable.state = QueryablePromiseState.REJECTED\n      // console.log(2, queryableThenable)\n      return error\n    })\n\n  return queryableThenable\n}\n\nexport default makeQueryablePromise\n","import QueryablePromiseState from 'queryablePromiseState'\n\nconst _queryable = Symbol('QueryablePromise')\nconst _compositeThen = fn => x => (fn(x), x)\n\n/**\n * @access public\n * @class\n * @classdesc QueryablePromise extends from native Promise and appends a state property and a couple of state query methods.\n */\nclass QueryablePromise {\n  private _state: string\n  /**\n   * @access private\n   * @param {Function} fnExecutor function which contains fulfill and reject resolvers for Promise\n   * @description Creates an instance of QueryablePromise.\n   * @constructs\n   * @memberof QueryablePromise\n   */\n  constructor (fnExecutor: (resolve: (value?: any) => void, reject: (reason?: any) => void) => void) {\n    this[_queryable] = this._promiseWrapper(fnExecutor)\n  }\n\n  /**\n   * @access public\n   * @function resolve\n   * @description then method refers to promise method\n   * @param {any} x the result value of resolve\n   * @returns {QueryablePromise} the resolve instance of the class\n   * @memberof QueryablePromise\n   * @static\n   */\n  public static resolve (x?: any): QueryablePromise {\n    return new QueryablePromise(\n      (onFulfill) => onFulfill(x)\n    )\n  }\n\n  /**\n   * @access public\n   * @function reject\n   * @description then method refers to promise method\n   * @param {any} y the reason or message error\n   * @returns {QueryablePromise} the reject instance of the class\n   * @memberof QueryablePromise\n   * @static\n   */\n  public static reject (y?: any): QueryablePromise {\n    return new QueryablePromise(\n      (_, onReject) => onReject(y)\n    )\n  }\n\n  /**\n   * @access private\n   * @function _promiseWrapper\n   * @description creates and merge _state property in promise flow\n   * @param {any} exec is the promise executor function\n   * @returns {Promise} the reject instance of the class\n   * @memberof QueryablePromise\n   * @static\n   */\n  private _promiseWrapper (exec: (resolve: (value?: any) => void, reject: (reason?: any) => void) => void): Promise<any> {\n    this._state = QueryablePromiseState.PENDING\n    return new Promise(exec)\n      .then(_compositeThen(\n        () => {\n          this._state = QueryablePromiseState.FULFILLED\n        })\n      )\n      .catch(\n        err => {\n          this._state = QueryablePromiseState.REJECTED\n          return Promise.reject(err)\n        }\n      )\n  }\n\n  /**\n   * @access public\n   * @type {string}\n   * @description the property [Symbol.toStringTag] included in Promise\n   * @returns {QueryablePromise} returns class instance\n   * @memberof QueryablePromise\n   */\n  public get [Symbol.toStringTag] (): string {\n    return 'QueryablePromise'\n  }\n\n  /**\n   * @access public\n   * @function then\n   * @description then method refers to promise method\n   * @param {any} fn method accepts a callback function\n   * @returns {QueryablePromise} returns class instance\n   * @memberof QueryablePromise\n   */\n  public then (fn?: (value?: any) => any): QueryablePromise {\n    this[_queryable].then(fn)\n    return this\n  }\n\n  /**\n   * @access public\n   * @function catch\n   * @description catch method refers to promise method\n   * @param {any} fn method accepts a callback function\n   * @returns {QueryablePromise} returns class instance\n   * @memberof QueryablePromise\n   */\n  public catch (fn?: (value?: any) => any): QueryablePromise {\n    this[_queryable].catch(fn)\n    return this\n  }\n\n  /**\n   * @access public\n   * @function finally\n   * @description catch method refers to promise method\n   * @param {any} fn method accepts a callback function\n   * @returns {QueryablePromise} returns class instance\n   * @memberof QueryablePromise\n   */\n  public finally (fn?: (value?: void) => void): QueryablePromise {\n    this[_queryable].finally(fn)\n    return this\n  }\n\n  /**\n   * @access public\n   * @type {QueryablePromiseState}\n   * @description Getter for queryable promise state.\n   * @returns {QueryablePromiseState} contains current promise state\n   * @memberof QueryablePromise\n   */\n  public get state (): string {\n    return this._state\n  }\n\n  /**\n   * @access public\n   * @function isPending\n   * @description retrieves true if queried state is actual queryable promise state.\n   * @returns {boolean} true when queryable promise state is PENDING\n   * @memberof QueryablePromise\n   */\n  public isPending (): boolean {\n    return this._state === QueryablePromiseState.PENDING\n  }\n\n  /**\n   * @access public\n   * @function isFulfilled\n   * @description retrieves true if queried state is actual queryable promise state.\n   * @returns {boolean} true when queryable promise state is FULFILLED\n   * @memberof QueryablePromise\n   */\n  public isFulfilled (): boolean {\n    return this._state === QueryablePromiseState.FULFILLED\n  }\n\n  /**\n   * @access public\n   * @function isRejected\n   * @description retrieves true if queried state is actual queryable promise state.\n   * @returns {boolean} true when queryable promise state is REJECTED\n   * @memberof QueryablePromise\n   */\n  public isRejected (): boolean {\n    return this._state === QueryablePromiseState.REJECTED\n  }\n}\n\nexport default QueryablePromise\n","/**\n * @access public\n * @description Contains queryable promise states\n * @constant {object}\n */\nconst QueryablePromiseState = {\n  /**\n   * @access public\n   * @description Promise state PENDING for queryable\n   * @constant {QueryablePromiseState}\n   */\n  PENDING: 'PENDING',\n\n  /**\n   * @access public\n   * @description Promise state FULFILLED for queryable\n   * @constant {QueryablePromiseState}\n   */\n  FULFILLED: 'FULFILLED',\n\n  /**\n   * @access public\n   * @description Promise state REJECTED for queryable\n   * @constant {QueryablePromiseState}\n   */\n  REJECTED: 'REJECTED',\n}\n\nexport default QueryablePromiseState\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import makeQueryablePromise from 'makeQueryablePromise'\nimport QueryablePromise from 'queryablePromise'\nimport QueryablePromiseState from 'queryablePromiseState'\n\nexports.QueryablePromiseState = QueryablePromiseState\nexports.QueryablePromise = QueryablePromise\nexports.makeQueryablePromise = makeQueryablePromise\n"],"sourceRoot":""}